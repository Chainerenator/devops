СОДЕРЖАНИЕ

Введение

I.   Создание и установка модуля ядра

II. Часто задаваемые вопросы:

    Вопрос: Как запустить файл установки .i686 или .x86_64?

    Вопрос: Совместим ли файл установки .i686 с моей
архитектурой x86_64?

    Вопрос: Можно ли установить продукт в системе IA64?

    Вопрос: Программа установки не может найти исходные файлы ядра в
каталоге /lib/modules/<ИСПОЛЬЗУЕМОЕ_ЯДРО>/build или
/lib/modules/<ИСПОЛЬЗУЕМОЕ_ЯДРО>/source. Что делать в таком случае?

ВВЕДЕНИЕ

В некоторых случаях программа установки не может скомпилировать 
необходимые модули ядра или подготовить необходимую среду
выполнения для продукта.  Обычно программа установки
сообщает об этой проблеме и предлагает использовать этот файл.

В разделе I этого файла описано, как создать и установить
модуль ядра.  Возможно, вам придется прочитать этот раздел, если
используется нестандартное ядро или исходные файлы ядра находятся
в нестандартном месте.

I. СОЗДАНИЕ И УСТАНОВКА МОДУЛЯ ЯДРА

Этот продукт можно установить в указанных ниже дистрибутивах Linux
с ядром версии от 2.4.20 до 4.4 и
glibc 2.3.2 или более поздней версии:

    (а) Red Hat Enterprise Linux 4.x, 5.x, 6.x, 7.0, 7.1, 
        и 7.2

    (б) Ubuntu 9.10, 10.04, 10.10, 11.04, 11.10, 12.04,
        12.10, 13.04, 13.10, 14.04, 14.10, 15.04 и 15.10

    (в) Fedora 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 
        22 и 23

    (г) SUSE Linux Enterprise Server 10 и 11
        SUSE Linux Enterprise Server 12 — поддерживается в файловых
        системах, за исключением Btrfs

    (д) Debian 4, 5, 6, 7.0, 7.2, 7.4, 7.5, 7.6, 7.7, 8.0, 
        8.1, 8.2 и 8.3

    (е) CentOS 5.x, 6.x, 7 и 7.1

    (ж) Oracle Linux 5.x, 6.x, 7.0, 7.1, и 7.2 —  
        Unbreakable Enterprise Kernel и Red Hat Compatible 
        Kernel

    (з) CloudLinux 6.x

    (и) ClearOS 5.x, 6.x, 7 и 7.1

Во всех этих дистрибутивах программа установки обычно
автоматически компилирует модуль ядра, необходимый
для работы продукта.

Если программа установки не может скомпилировать модуль ядра,
придется делать это вручную следующим образом.

Нужно установить исходные файлы ядра, соответствующий
файл конфигурации и все пакеты, необходимые для
создания ядра. Эти пакеты включают в себя gcc, make
и kernel-devel.    Поступит запрос на указание
необходимых пакетов при установке исходных файлов ядра.

Обычно вы можете создать и установить модуль ядра snapapi,
выполнив следующие команды dkms:

    # dkms build -m <ИМЯ_МОДУЛЯ> -v <ВЕРСИЯ_МОДУЛЯ> \
     --config <ФАЙЛ_КОНФИГУРАЦИИ> --arch <АРХИТЕКУТРА_ЯДРА> \
     --kernelsourcedir <ПУТЬ_К_ИСТОЧНИКАМ_ЯДРА>

    # dkms install -m <ИМЯ_МОДУЛЯ> -v <ВЕРСИЯ_МОДУЛЯ> \
     --config <ФАЙЛ_КОНФИГУРАЦИИ> --arch <АРХИТЕКУТРА_ЯДРА> \
     --kernelsourcedir <ПУТЬ_К_ИСТОЧНИКАМ_ЯДРА>

В этих командах:

    <ИМЯ_МОДУЛЯ> должно следующим:

        (а) Для ядер 2.4.x: snapapi

        (б) Для ядер 2.6.x и 3.x: snapapi26

    <ВЕРСИЯ_МОДУЛЯ> — это версия модуля "snapapi".
Определить это можно с помощью следующей команды:

        # ls /usr/src | grep snapapi

        Например, в имени каталога 
snapapi26-0.7.64 <ИМЯ_МОДУЛЯ> — 0.7.64

    <ФАЙЛ_КОНФИГУРАЦИИ> — имя вашего файла конфигурации
ядра.  Этот файл обычно расположен в каталоге /boot.
Укажите полное имя файла, например:
/boot/config-2.6.31-14-generic

    <АРХИТЕКУТРА_ЯДРА> — это тип архитектуры ядра,
например i686. Узнать значение параметра <АРХИТЕКУТРА_ЯДРА>
можно с помощью следующих команд:

        (а) Для дистрибутивов на основе RPM, например Red Hat
Enterprise Linux, CentOS или Fedora:

            # rpm -q --queryformat "%{ARCH}\n" kernel

        (б) Для дистрибутивов не на основе RPM, таких как
Ubuntu:

            # uname -m

Подробные сведения об использовании утилиты dkms содержатся на ее странице
man.

После успешного создания и установки модуля
ядра можно запустить продукт, чтобы проверить его функциональность.
Соответствующие модули ядра будут загружены автоматически.

II. Часто задаваемые вопросы

Вопрос: Как запустить файл установки .i686 или .x86_64?

   Ответ: Это стандартный двоичный файл.   Чтобы запустить
установку, выполните следующие команды:

          # chmod +x <ИМЯ_ФАЙЛА>

          # ./<ИМЯ_ФАЙЛА>

      Здесь <ИМЯ_ФАЙЛА> — это имя файла установки
.i686 или .x86_64.

      Программа установки использует менеджер пакетов RPM (RPM).
Прежде чем устанавливать данный продукт в системе, не
использующей RPM, такой как система Ubuntu, необходимо установить RPM,
например, с помощью следующей команды, выполняемой от имени привилегированного
пользователя:

          #apt-get install -y rpm

Вопрос: Совместим ли файл установки .i686 с моей
архитектурой x86_64?

   Ответ: Нет, необходимо загрузить и установить соответствующий
файл установки .x86_64 вместо файла установки
.i686. Процедура установки та же самая.

Вопрос: Можно ли установить продукт в системе IA64?

   Ответ: Нет, эта архитектура не поддерживается данным продуктом.

Вопрос: Программа установки не может найти исходные файлы ядра в
каталоге /lib/modules/<ИСПОЛЬЗУЕМОЕ_ЯДРО>/build или
/lib/modules/<ИСПОЛЬЗУЕМОЕ_ЯДРО>/source. Что делать в таком случае?

   Ответ: Обычно это означает, что вам нужно установить исходные файлы
ядра, соответствующие версии ядра.

      Следующие команды устанавливают исходные файлы ядра
в системах Debian и Ubuntu:

       $ sudo apt-get update
       $ sudo apt-get install linux-headers-`uname -r`
       $ sudo apt-get install linux-image-`uname -r`
      
      Следующая команда устанавливает исходные файлы ядра
в системах Red Hat Enterprise Linux и Fedora:

       # yum install kernel-devel-`uname -r`


